# -*- coding: utf-8 -*-

# Author: Youssef El Housni
# youssef.el.housni@fr.ey.com / youssef.housni21@gmail.com 


# print for debug
print('curve_family', curve_family)
print('curve_name', curve_name)
print('modulus_r', modulus_r)
print('R2_64_r', R2_64_r)
print('R3_64_r', R3_64_r)
print('inv_64_r', inv_64_r)
print('R2_32_r', R2_32_r)
print('R3_32_r', R3_32_r)
print('inv_32_r', inv_32_r)
print('num_bits_r', num_bits_r)
print('euler_r', euler_r)
print('s_r', s_r)
print('t_r', t_r)
print('t_minus_1_over_2_r', t_minus_1_over_2_r)
print('multiplicative_generator_r', multiplicative_generator_r)
print('root_of_unity_r', root_of_unity_r)
print('nqr_r', nqr_r)
print('nqr_to_t_r',  nqr_to_t_r)
print('modulus_q', modulus_q)
print('R2_64_q', R2_64_q)
print('R3_64_q', R3_64_q)
print('inv_64_q', inv_64_q)
print('R2_32_q', R2_32_q)
print('R3_32_q', R3_32_q)
print('inv_32_q', inv_32_q)
print('num_bits_q', num_bits_q)
print('euler_q', euler_q)
print('s_q', s_q)
print('t_q', t_q)
print('t_minus_1_over_2_q', t_minus_1_over_2_q)
print('multiplicative_generator_q', multiplicative_generator_q)
print('root_of_unity_q', root_of_unity_q)
print('nqr_q', nqr_q)
print('nqr_to_t_q',  nqr_to_t_q)
print('euler_q2', euler_q2)
print('s_q2', s_q2)
print('t_q2', t_q2)
print('t_minus_1_over_2_q2', t_minus_1_over_2_q2)
print('non_residue_q2', non_residue_q2)
print('nqr_q2', nqr_q2)
print('nqr_to_t_q2', nqr_to_t_q2)
print('frobenius_q2', frobenius_q2)
print('non_residue_q6', non_residue_q6)
print('frobenius_q6_1', frobenius_q6_1)
print('frobenius_q6_2', frobenius_q6_2)
print('mul_by_q', mul_by_q)
print('twist_coeff_b', twist_coeff_b)
print('twist_type', twist_type)
print('G1_one', G1_one)
print('G2_one', G2_one)
print('non_residue_q12', non_residue_q12)
print('frobenius_q12', frobenius_q12)
print('ate_loop_count', ate_loop_count)
print('ate_loop_count_bool', ate_loop_count_bool)
print('final_exponent', final_exponent)
print('x_bool', x_bool)


